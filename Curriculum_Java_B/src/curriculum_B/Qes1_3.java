package curriculum_B;
import java.util.Random;
import java.util.Scanner;
public class Qes1_3 {
	public static void main(String[] args) {
		// Q1 ログイン時の入力チェックシステムを下記条件で作成してください
		// ・コンソールにユーザー名を入力できるようにしてください
		// ・ユーザー名の文字数が10文字より大きい場合「名前を10文字以内にしてください」と出力してください
		// ・ユーザー名の文字数が0文字以下もしくはnullの場合「名前を入力してください」と出力してください
		// ・ユーザー名が正常な値だった場合「ユーザー名「 入力したユーザー名 」を登録しました」と出力してください
		// Q2 ユーザー名が半角英数字以外の場合「半角英数字のみで名前を入力してください」と出力してください

		// Q1＋Q2の解答

		// キーボードから1行の文字列の入力を受け付ける記述。読み込みのみのコード。
		Scanner a = new Scanner(System.in);
		// 1行分の文字列を取得するメソッド(nextLineでコンソールに入力したものが出力)
		String name = a.nextLine();
		// 半角英数字「!：以外」の出力で
		if (!name.matches("^[a-zA-Z0-9]+$")) {
			System.out.println("半角英数字のみで名前を入力してください");
		}
		// 文字数が10文字より大きい場合「名前を10文字以内にしてください」と出力
		else if ( name.length() > 10) {
			System.out.println("名前を10文字以内にしてください");
		}
		// 文字数が0文字以下もしくはnullの場合「名前を入力してください」と出力
		else if ( name.length() <= 0 ){
			System.out.println("名前を入力してください");
		}
		// 正常な値だった場合「ユーザー名「 入力したユーザー名 」を登録しました」と出力
		else {
			System.out.println("ユーザー名 「" + name  + "」を登録しました");
		}


		// Q3 じゃんけんのシステムを下記の条件で作成してください
		// ・「0はグー、1：チョキ、2：パー」とすること
		// ・じゃんけんに勝つまでループすること
		// ・一回ごとに自分の手と相手の手を下記の通り出力してください
		// ユーザー名「name」を登録しました
		// nameの手は「パー」
		// 相手の手は「グー」

		// ・条件分岐の設定
		// ・自分がじゃんけんに勝った場合、下記が出力されるようにしてください
		// やるやん。
		// 次は俺にリベンジさせて

		// ・自分がじゃんけんでグーに負けた場合、下記が出力されるようにしてください
		//	 俺の勝ち！
		//	 負けは次につながるチャンスです！
		//   ネバーギブアップ！

		// ・自分がじゃんけんでチョキに負けた場合、下記が出力されるようにしてください
		//	 俺の勝ち！
		//	 たかがじゃんけん、そう思ってないですか？
		//	 それやったら次も、俺が勝ちますよ

		// ・自分がじゃんけんでパーに負けた場合、下記が出力されるようにしてください
		//	 俺の勝ち！
		//	 なんで負けたか、明日まで考えといてください。
		//	 そしたら何かが見えてくるはずです

		// ・あいこの場合、下記が出力されるようにしてください
		//   DRAW あいこ もう一回しましょう！

		// じゃんけんを行った回数を表示してください
		// 勝つまでにかかった合計回数は1回です

		// ユーザー名が正常の場合じゃんけんのシステムが起動するようにしてください


		// 同じ型の複数の値をまとめて一つの変数として扱う。
		String hand[] = {"グー","チョキ","パー"};
		// 整数で指定範囲の乱数を生成[Random.nextInt()]
		Random ran = new Random();
		// 自分、相手、回数の変数の宣言
		int user = 0;
		int cp = 0;
		int count = 0;
		// trueかfalseのみ入るデータ型の宣言。
		boolean bo = true;
		// 繰り返し(do-while構文)
		do  {
			// 相手：「0:グー,1:チョキ,2:パー」の数字を定義
			cp = ran.nextInt(3);
			// 自分の手は0:グー、相手の手はランダムでじゃんけん。
			System.out.println(name + "の手は" + hand[0]);
			System.out.println("相手の手は" + hand[cp]);
			// 自分の手はグー。相手の手がグーになったらあいこ。(hand[cp]:ランダム)
			if (hand[0].equals(hand[cp])) {
				// メッセージを表示
				System.out.println("DRAW あいこ もう一回しましょう！");
				// 自分が相手に負けた記述
			} else if(( user == 0 && cp == 2) || ( user == 1 && cp == 0) || ( user == 2 && cp == 1)) {
				// 処理の切り分け。相手の出した
				switch(cp) {
				// cpの値が0のとき。自分がじゃんけんでチョキに負けた場合
				case 0 : System.out.println("俺の勝ち！たかがじゃんけん、そう思ってないですか？それやったら次も、俺が勝ちますよ");
				// 処理を中断してswitch文の{}を抜ける
				break;
				// cpの値が1のとき。自分がじゃんけんでパーに負けた場合
				case 1 : System.out.println("俺の勝ち！なんで負けたか、明日まで考えといてください。そしたら何かが見えてくるはずです");
				break;
				// cpの値が2のとき。自分がじゃんけんでグーに負けた場合
				case 2 : System.out.println("俺の勝ち！負けは次につながるチャンスです！ネバーギブアップ！");
				break;
				}
			} else {
				// falseの宣言でじゃんけんを終わらせる。
				bo = false;
				// 勝ちのパターン
				System.out.println("やるやん。次は俺にリベンジさせて");
			}
			// カウント変数で回数の表示
			count++;
			// 上記ブロックを実行後に条件判定
		} while(bo);
		// 回数の表示
		System.out.println("勝つまでにかかった合計回数は" + count + "回です");
	}
}
